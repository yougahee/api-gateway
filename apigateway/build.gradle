plugins {
	id 'org.springframework.boot' version '2.3.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.sonarqube" version '2.7'
}

group = 'com.gaga'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	//Hoxton.M3
	set('springCloudVersion', "Hoxton.SR9")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'

	//zuul
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
	implementation 'com.auth0:java-jwt:3.4.0'

	//gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

	//test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sonarqube {
	properties {
		property "sonar.host.url", "http://localhost:9000/"
		property "sonar.login", "admin"
		property "sonar.password", "admin"
		property "sonar.projectKey", "morse-api-gateway-server"
		property "sonar.projectName", "morse-api-gateway-server"
		property "sonar.projectVersion", "1.0"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.sources", "src/main/java"
		property "sonar.profile", "Sonar way"
	}
}

test {
	useJUnitPlatform()
}
